WHAT IS RSYNC?
--------------

rsync is a replacement for rcp that has many more features.

rsync uses the "rsync algorithm" which provides a very fast method for
bringing remote files into sync. It does this by sending just the
differences in the files across the link, without requiring that both
sets of files are present at one of the ends of the link beforehand.
At first glance this may seem impossible because the calculation of
diffs between two files normally requires local access to both
files. 

A technical report describing the rsync algorithm is included with
this package. 


USAGE
-----

Basically you use rsync just like rcp, but rsync has many additional options.

Here is a brief description of available options:

Options:
-v, --verbose            increase verbosity
-c, --checksum           always checksum
-a, --archive            archive mode (same as -rlptDog)
-r, --recursive          recurse into directories
-R, --relative           use relative path names
-b, --backup             make backups (default ~ extension)
-u, --update             update only (don't overwrite newer files)
-l, --links              preserve soft links
-L, --copy-links         treat soft links like regular files
-H, --hard-links         preserve hard links
-p, --perms              preserve permissions
-o, --owner              preserve owner (root only)
-g, --group              preserve group
-D, --devices            preserve devices (root only)
-t, --times              preserve times
-S, --sparse             handle sparse files efficiently
-n, --dry-run            show what would have been transferred
-W, --whole-file         copy whole files, no incremental checks
-x, --one-file-system    don't cross filesystem boundaries
-B, --block-size SIZE    checksum blocking size
-e, --rsh COMMAND        specify rsh replacement
    --rsync-path PATH    specify path to rsync on the remote machine
-C, --cvs-exclude        auto ignore files in the same way CVS does
    --delete             delete files that don't exist on the sending side
    --force              force deletion of directories even if not empty
    --numeric-ids        don't map uid/gid values by user/group name
    --timeout TIME       set IO timeout in seconds
-I, --ignore-times       don't exclude files that match length and time
-T  --temp-dir DIR       create temporary files in directory DIR
-z, --compress           compress file data
    --exclude FILE       exclude file FILE
    --exclude-from FILE  exclude files listed in FILE
    --suffix SUFFIX      override backup suffix
    --version            print version number
    --daemon             run as a rsync daemon
    --config FILE        specify alternate rsyncd.conf file
    --port PORT          specify alternate rsyncd port number


SETUP
-----

Rsync uses rsh or ssh for communication. It does not need to be setuid
and requires no special privilages for installation. It does not
require a inetd entry or a daemon. You must, however, have a working
rsh or ssh system. Using ssh is recommended for its security
features. 

To install rsync, first run the "configure" script. This will create a
Makefile and config.h appropriate for your system. Then type
"make". 

Note that on some systems you will have to force configure not to use
gcc because gcc may not support some features (such as 64 bit file
offsets) that your system may support. Set the environment variable CC
to the name of your native compiler before running configure in this
case. 

Once built put a copy of rsync in your search path on the local and
remote systems (or use "make install"). That's it!

RSYNC SERVERS
-------------

rsync can also talk to "rsync servers" which can provide anonymous or
authenticated rsync. See the rsync.conf(5) man page for details on how
to setup a rsync server. See the rsync(1) man page for info on how to
connect to a rsync server.


MAILING LIST
------------

There is a mailing list for the discussion of rsync and its
applications. It is open to anyone to join. I will announce new
versions on this list. 

To join the mailing list send mail to listproc@samba.anu.edu.au with
no subject and a body of "subscribe rsync Your Name".

To send mail to everyone on the list send it to rsync@samba.anu.edu.au


BUG REPORTS
-----------

If you have web access then please look at
http://samba.anu.edu.au/rsync/ 

This will give you access to the bug tracking system used by the
developers of rsync and will allow you to look at other bug reports or
submit a new bug report.

If you don't have web access then mail bug reports to
rsync-bugs@samba.anu.edu.au or (if you think it will be of interest to
lots of people) send it to rsync@samba.anu.edu.au


CVS TREE
--------

If you want to get the very latest version of rsync direct from the
source code repository then you can use anonymous cvs. You will need a
recent version of cvs then use the following commands:

	cvs -d :pserver:cvs@samba.anu.edu.au:/cvsroot login
	Password: cvs

	cvs -d :pserver:cvs@samba.anu.edu.au:/cvsroot co rsync

Look at the cvs documentation for more details.


COPYRIGHT
---------

Rsync was written by Andrew Tridgell and Paul Mackerras, and is
available under the Gnu Public License.

tridge@samba.anu.edu.au
paulus@cs.anu.edu.au


AVAILABILITY
------------

The main ftp site for rsync is ftp://samba.anu.edu.au/pub/rsync 
This is also available as rsync://samba.anu.edu.au/rsyncftp/

Mirrors are available at:

ftp://sunsite.auc.dk/pub/unix/rsync
ftp://ftp.sunet.se/pub/unix/admin/rsync
ftp://ftp.fu-berlin.de/pub/unix/network/rsync/
