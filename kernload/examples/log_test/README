This simple example of a loaded kernel server provides a trivial MIG-generated interface to demonstrate message passing between a user program and a server running within the kernel.  The server implements two services: simple_puts(), which prints the supplied string on on the console using the kernel printf facilities, and simple_vers() which returns the kernel version string to the user.  The following files are used in the implementation:

simple.c	- This file uses the MIG generated interface to the simple
		  server.  It obtains access to the server by looking up
		  the port advertized on its behalf by the kernel loader.

simple.defs	- This file implements the MIG interface to the server.
		  It generates simpleServer.c, simpleUser.c, and simple.h.

simple.kern_server
		- This file provides configuration information to the kernel
		  loader (kern_loader) to initialize and start up the server.
		  This file specifies the name of the server, the location
		  of the relocatable file to be loaded into the kernel, and
		  information needed to load and unload the server.

simple_handler.c- This file is constructed as an interface to simpleServer.c
		  It presents an interface based on message/argument, rather
		  than inmsg, outmsg.  It is generated by hand by inspecting
		  simpleServer.c.  (Note, this will change to either become
		  automatically generated, or a different mechanism will be
		  used in the future).

simple_handler.h- Constructed, as is simple_handler.c, as an interface to the
		  MIG generated simpleServer.c

simple_server.c	- This implements the guts of the server running in the kernel.
		  It is called from the (linked in, or resident in the kernel)
		  kernel server interface routines when messages or other
		  events are recieved for this server.


To load this into the kernel loader type the following:

	kl_util -a simple.kern_server

This will cause the server to be initialized by the kernel loader.  Running the program simple will then invoke the server, causing it to be loaded into the kernel.
