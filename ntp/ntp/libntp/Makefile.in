# Makefile.in generated automatically by automake 1.2h from Makefile.am

# Copyright (C) 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

#AUTOMAKE_OPTIONS = ../ansi2knr no-dependencies


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DISTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AUTHCERT = @AUTHCERT@
AUTHSPEED = @AUTHSPEED@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
CHUTEST = @CHUTEST@
CLKTEST = @CLKTEST@
CPP = @CPP@
DCFD = @DCFD@
DESOBJS = @DESOBJS@
KEYPARITY = @KEYPARITY@
LDFLAGS = @LDFLAGS@
LIBPARSE = @LIBPARSE@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MAKEIPFP = @MAKEIPFP@
MAKEPC1 = @MAKEPC1@
MAKEPC2 = @MAKEPC2@
MAKESP = @MAKESP@
MAKE_ADJTIMED = @MAKE_ADJTIMED@
MAKE_LIBPARSE = @MAKE_LIBPARSE@
MAKE_LIBPARSE_KERNEL = @MAKE_LIBPARSE_KERNEL@
MAKE_NTPTIME = @MAKE_NTPTIME@
MAKE_PARSEKMODULE = @MAKE_PARSEKMODULE@
MAKE_TICKADJ = @MAKE_TICKADJ@
MD5DRIVER = @MD5DRIVER@
MKRANDKEYS = @MKRANDKEYS@
OMAKEIPFP = @OMAKEIPFP@
PACKAGE = @PACKAGE@
PROPDELAY = @PROPDELAY@
RANLIB = @RANLIB@
TESTDCF = @TESTDCF@
U = @U@
UNIXCERT = @UNIXCERT@
VERSION = @VERSION@

AUTOMAKE_OPTIONS = ../util/ansi2knr
noinst_LIBRARIES = libntp.a
libntp_a_SOURCES = a_md5encrypt.c adjtime.c atoint.c atolfp.c atouint.c \
	authencrypt.c authkeys.c authparity.c authreadkeys.c authusekey.c \
	buftvtots.c caljulian.c calleapwhen.c caltontp.c calyearstart.c \
	clocktime.c clocktypes.c decodenetnum.c dofptoa.c dolfptoa.c \
	emalloc.c findconfig.c fptoa.c fptoms.c getopt.c hextoint.c \
	hextolfp.c humandate.c inttoa.c lib_strbuf.c machines.c md5c.c \
	memmove.c mexit.c mfptoa.c mfptoms.c modetoa.c mstolfp.c msutotsf.c \
	msyslog.c netof.c numtoa.c numtohost.c octtoint.c prettydate.c \
	ranny.c refnumtoa.c statestr.c syssignal.c systime.c tsftomsu.c \
	tstotv.c tvtoa.c tvtots.c uglydate.c uinttoa.c utvtoa.c ymd2yd.c \
	mfp_mul.c binio.c ieee754io.c gpstolfp.c
libntp_a_LIBADD = @LIBOBJS@ @DESOBJS@
libntp_a_DEPENDENCIES = @LIBOBJS@ @DESOBJS@
INCLUDES = -I$(top_srcdir)/include
ETAGS_ARGS = Makefile.am

noinst_HEADERS = lib_strbuf.h log.h

EXTRA_DIST = libntp.mak README $(HEADERS) adjtimex.c log.c strerror.c mktime.c
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(noinst_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
ANSI2KNR = ../util/ansi2knr
libntp_a_OBJECTS =  a_md5encrypt$U.o adjtime$U.o atoint$U.o atolfp$U.o \
atouint$U.o authencrypt$U.o authkeys$U.o authparity$U.o \
authreadkeys$U.o authusekey$U.o buftvtots$U.o caljulian$U.o \
calleapwhen$U.o caltontp$U.o calyearstart$U.o clocktime$U.o \
clocktypes$U.o decodenetnum$U.o dofptoa$U.o dolfptoa$U.o emalloc$U.o \
findconfig$U.o fptoa$U.o fptoms$U.o getopt$U.o hextoint$U.o \
hextolfp$U.o humandate$U.o inttoa$U.o lib_strbuf$U.o machines$U.o \
md5c$U.o memmove$U.o mexit$U.o mfptoa$U.o mfptoms$U.o modetoa$U.o \
mstolfp$U.o msutotsf$U.o msyslog$U.o netof$U.o numtoa$U.o numtohost$U.o \
octtoint$U.o prettydate$U.o ranny$U.o refnumtoa$U.o statestr$U.o \
syssignal$U.o systime$U.o tsftomsu$U.o tstotv$U.o tvtoa$U.o tvtots$U.o \
uglydate$U.o uinttoa$U.o utvtoa$U.o ymd2yd$U.o mfp_mul$U.o binio$U.o \
ieee754io$U.o gpstolfp$U.o
AR = ar
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(CC) $(CFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  README Makefile.am Makefile.in mktime.c strerror.c


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP = --best
SOURCES = $(libntp_a_SOURCES)
OBJECTS = $(libntp_a_OBJECTS)

all: Makefile $(LIBRARIES) $(HEADERS)

.SUFFIXES:
.SUFFIXES: .S .c .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps libntp/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstLIBRARIES:

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:
../util/ansi2knr: ../util/ansi2knr.o
	cd ../util && $(MAKE) ansi2knr

../util/ansi2knr.o:
	cd ../util && $(MAKE) ansi2knr.o


mostlyclean-kr:
	-rm -f *_.c

clean-kr:

distclean-kr:

maintainer-clean-kr:

libntp.a: $(libntp_a_OBJECTS) $(libntp_a_DEPENDENCIES)
	-rm -f libntp.a
	$(AR) cru libntp.a $(libntp_a_OBJECTS) $(libntp_a_LIBADD)
	$(RANLIB) libntp.a
a_md5encrypt_.c: a_md5encrypt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/a_md5encrypt.c; then echo $(srcdir)/a_md5encrypt.c; else echo a_md5encrypt.c; fi` | $(ANSI2KNR) - a_md5encrypt_.c
adjtime_.c: adjtime.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/adjtime.c; then echo $(srcdir)/adjtime.c; else echo adjtime.c; fi` | $(ANSI2KNR) - adjtime_.c
atoint_.c: atoint.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/atoint.c; then echo $(srcdir)/atoint.c; else echo atoint.c; fi` | $(ANSI2KNR) - atoint_.c
atolfp_.c: atolfp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/atolfp.c; then echo $(srcdir)/atolfp.c; else echo atolfp.c; fi` | $(ANSI2KNR) - atolfp_.c
atouint_.c: atouint.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/atouint.c; then echo $(srcdir)/atouint.c; else echo atouint.c; fi` | $(ANSI2KNR) - atouint_.c
authencrypt_.c: authencrypt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/authencrypt.c; then echo $(srcdir)/authencrypt.c; else echo authencrypt.c; fi` | $(ANSI2KNR) - authencrypt_.c
authkeys_.c: authkeys.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/authkeys.c; then echo $(srcdir)/authkeys.c; else echo authkeys.c; fi` | $(ANSI2KNR) - authkeys_.c
authparity_.c: authparity.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/authparity.c; then echo $(srcdir)/authparity.c; else echo authparity.c; fi` | $(ANSI2KNR) - authparity_.c
authreadkeys_.c: authreadkeys.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/authreadkeys.c; then echo $(srcdir)/authreadkeys.c; else echo authreadkeys.c; fi` | $(ANSI2KNR) - authreadkeys_.c
authusekey_.c: authusekey.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/authusekey.c; then echo $(srcdir)/authusekey.c; else echo authusekey.c; fi` | $(ANSI2KNR) - authusekey_.c
binio_.c: binio.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/binio.c; then echo $(srcdir)/binio.c; else echo binio.c; fi` | $(ANSI2KNR) - binio_.c
buftvtots_.c: buftvtots.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/buftvtots.c; then echo $(srcdir)/buftvtots.c; else echo buftvtots.c; fi` | $(ANSI2KNR) - buftvtots_.c
caljulian_.c: caljulian.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/caljulian.c; then echo $(srcdir)/caljulian.c; else echo caljulian.c; fi` | $(ANSI2KNR) - caljulian_.c
calleapwhen_.c: calleapwhen.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/calleapwhen.c; then echo $(srcdir)/calleapwhen.c; else echo calleapwhen.c; fi` | $(ANSI2KNR) - calleapwhen_.c
caltontp_.c: caltontp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/caltontp.c; then echo $(srcdir)/caltontp.c; else echo caltontp.c; fi` | $(ANSI2KNR) - caltontp_.c
calyearstart_.c: calyearstart.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/calyearstart.c; then echo $(srcdir)/calyearstart.c; else echo calyearstart.c; fi` | $(ANSI2KNR) - calyearstart_.c
clocktime_.c: clocktime.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/clocktime.c; then echo $(srcdir)/clocktime.c; else echo clocktime.c; fi` | $(ANSI2KNR) - clocktime_.c
clocktypes_.c: clocktypes.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/clocktypes.c; then echo $(srcdir)/clocktypes.c; else echo clocktypes.c; fi` | $(ANSI2KNR) - clocktypes_.c
decodenetnum_.c: decodenetnum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/decodenetnum.c; then echo $(srcdir)/decodenetnum.c; else echo decodenetnum.c; fi` | $(ANSI2KNR) - decodenetnum_.c
dofptoa_.c: dofptoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/dofptoa.c; then echo $(srcdir)/dofptoa.c; else echo dofptoa.c; fi` | $(ANSI2KNR) - dofptoa_.c
dolfptoa_.c: dolfptoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/dolfptoa.c; then echo $(srcdir)/dolfptoa.c; else echo dolfptoa.c; fi` | $(ANSI2KNR) - dolfptoa_.c
emalloc_.c: emalloc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/emalloc.c; then echo $(srcdir)/emalloc.c; else echo emalloc.c; fi` | $(ANSI2KNR) - emalloc_.c
findconfig_.c: findconfig.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/findconfig.c; then echo $(srcdir)/findconfig.c; else echo findconfig.c; fi` | $(ANSI2KNR) - findconfig_.c
fptoa_.c: fptoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/fptoa.c; then echo $(srcdir)/fptoa.c; else echo fptoa.c; fi` | $(ANSI2KNR) - fptoa_.c
fptoms_.c: fptoms.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/fptoms.c; then echo $(srcdir)/fptoms.c; else echo fptoms.c; fi` | $(ANSI2KNR) - fptoms_.c
getopt_.c: getopt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/getopt.c; then echo $(srcdir)/getopt.c; else echo getopt.c; fi` | $(ANSI2KNR) - getopt_.c
gpstolfp_.c: gpstolfp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/gpstolfp.c; then echo $(srcdir)/gpstolfp.c; else echo gpstolfp.c; fi` | $(ANSI2KNR) - gpstolfp_.c
hextoint_.c: hextoint.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/hextoint.c; then echo $(srcdir)/hextoint.c; else echo hextoint.c; fi` | $(ANSI2KNR) - hextoint_.c
hextolfp_.c: hextolfp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/hextolfp.c; then echo $(srcdir)/hextolfp.c; else echo hextolfp.c; fi` | $(ANSI2KNR) - hextolfp_.c
humandate_.c: humandate.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/humandate.c; then echo $(srcdir)/humandate.c; else echo humandate.c; fi` | $(ANSI2KNR) - humandate_.c
ieee754io_.c: ieee754io.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/ieee754io.c; then echo $(srcdir)/ieee754io.c; else echo ieee754io.c; fi` | $(ANSI2KNR) - ieee754io_.c
inttoa_.c: inttoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/inttoa.c; then echo $(srcdir)/inttoa.c; else echo inttoa.c; fi` | $(ANSI2KNR) - inttoa_.c
lib_strbuf_.c: lib_strbuf.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/lib_strbuf.c; then echo $(srcdir)/lib_strbuf.c; else echo lib_strbuf.c; fi` | $(ANSI2KNR) - lib_strbuf_.c
machines_.c: machines.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/machines.c; then echo $(srcdir)/machines.c; else echo machines.c; fi` | $(ANSI2KNR) - machines_.c
md5c_.c: md5c.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/md5c.c; then echo $(srcdir)/md5c.c; else echo md5c.c; fi` | $(ANSI2KNR) - md5c_.c
memmove_.c: memmove.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/memmove.c; then echo $(srcdir)/memmove.c; else echo memmove.c; fi` | $(ANSI2KNR) - memmove_.c
mexit_.c: mexit.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/mexit.c; then echo $(srcdir)/mexit.c; else echo mexit.c; fi` | $(ANSI2KNR) - mexit_.c
mfp_mul_.c: mfp_mul.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/mfp_mul.c; then echo $(srcdir)/mfp_mul.c; else echo mfp_mul.c; fi` | $(ANSI2KNR) - mfp_mul_.c
mfptoa_.c: mfptoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/mfptoa.c; then echo $(srcdir)/mfptoa.c; else echo mfptoa.c; fi` | $(ANSI2KNR) - mfptoa_.c
mfptoms_.c: mfptoms.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/mfptoms.c; then echo $(srcdir)/mfptoms.c; else echo mfptoms.c; fi` | $(ANSI2KNR) - mfptoms_.c
mktime_.c: mktime.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/mktime.c; then echo $(srcdir)/mktime.c; else echo mktime.c; fi` | $(ANSI2KNR) - mktime_.c
modetoa_.c: modetoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/modetoa.c; then echo $(srcdir)/modetoa.c; else echo modetoa.c; fi` | $(ANSI2KNR) - modetoa_.c
mstolfp_.c: mstolfp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/mstolfp.c; then echo $(srcdir)/mstolfp.c; else echo mstolfp.c; fi` | $(ANSI2KNR) - mstolfp_.c
msutotsf_.c: msutotsf.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/msutotsf.c; then echo $(srcdir)/msutotsf.c; else echo msutotsf.c; fi` | $(ANSI2KNR) - msutotsf_.c
msyslog_.c: msyslog.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/msyslog.c; then echo $(srcdir)/msyslog.c; else echo msyslog.c; fi` | $(ANSI2KNR) - msyslog_.c
netof_.c: netof.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/netof.c; then echo $(srcdir)/netof.c; else echo netof.c; fi` | $(ANSI2KNR) - netof_.c
numtoa_.c: numtoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/numtoa.c; then echo $(srcdir)/numtoa.c; else echo numtoa.c; fi` | $(ANSI2KNR) - numtoa_.c
numtohost_.c: numtohost.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/numtohost.c; then echo $(srcdir)/numtohost.c; else echo numtohost.c; fi` | $(ANSI2KNR) - numtohost_.c
octtoint_.c: octtoint.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/octtoint.c; then echo $(srcdir)/octtoint.c; else echo octtoint.c; fi` | $(ANSI2KNR) - octtoint_.c
prettydate_.c: prettydate.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/prettydate.c; then echo $(srcdir)/prettydate.c; else echo prettydate.c; fi` | $(ANSI2KNR) - prettydate_.c
ranny_.c: ranny.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/ranny.c; then echo $(srcdir)/ranny.c; else echo ranny.c; fi` | $(ANSI2KNR) - ranny_.c
refnumtoa_.c: refnumtoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/refnumtoa.c; then echo $(srcdir)/refnumtoa.c; else echo refnumtoa.c; fi` | $(ANSI2KNR) - refnumtoa_.c
statestr_.c: statestr.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/statestr.c; then echo $(srcdir)/statestr.c; else echo statestr.c; fi` | $(ANSI2KNR) - statestr_.c
strerror_.c: strerror.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/strerror.c; then echo $(srcdir)/strerror.c; else echo strerror.c; fi` | $(ANSI2KNR) - strerror_.c
syssignal_.c: syssignal.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/syssignal.c; then echo $(srcdir)/syssignal.c; else echo syssignal.c; fi` | $(ANSI2KNR) - syssignal_.c
systime_.c: systime.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/systime.c; then echo $(srcdir)/systime.c; else echo systime.c; fi` | $(ANSI2KNR) - systime_.c
tsftomsu_.c: tsftomsu.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/tsftomsu.c; then echo $(srcdir)/tsftomsu.c; else echo tsftomsu.c; fi` | $(ANSI2KNR) - tsftomsu_.c
tstotv_.c: tstotv.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/tstotv.c; then echo $(srcdir)/tstotv.c; else echo tstotv.c; fi` | $(ANSI2KNR) - tstotv_.c
tvtoa_.c: tvtoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/tvtoa.c; then echo $(srcdir)/tvtoa.c; else echo tvtoa.c; fi` | $(ANSI2KNR) - tvtoa_.c
tvtots_.c: tvtots.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/tvtots.c; then echo $(srcdir)/tvtots.c; else echo tvtots.c; fi` | $(ANSI2KNR) - tvtots_.c
uglydate_.c: uglydate.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/uglydate.c; then echo $(srcdir)/uglydate.c; else echo uglydate.c; fi` | $(ANSI2KNR) - uglydate_.c
uinttoa_.c: uinttoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/uinttoa.c; then echo $(srcdir)/uinttoa.c; else echo uinttoa.c; fi` | $(ANSI2KNR) - uinttoa_.c
utvtoa_.c: utvtoa.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/utvtoa.c; then echo $(srcdir)/utvtoa.c; else echo utvtoa.c; fi` | $(ANSI2KNR) - utvtoa_.c
ymd2yd_.c: ymd2yd.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(CPPFLAGS) `if test -f $(srcdir)/ymd2yd.c; then echo $(srcdir)/ymd2yd.c; else echo ymd2yd.c; fi` | $(ANSI2KNR) - ymd2yd_.c
a_md5encrypt_.o adjtime_.o atoint_.o atolfp_.o atouint_.o \
authencrypt_.o authkeys_.o authparity_.o authreadkeys_.o authusekey_.o \
binio_.o buftvtots_.o caljulian_.o calleapwhen_.o caltontp_.o \
calyearstart_.o clocktime_.o clocktypes_.o decodenetnum_.o dofptoa_.o \
dolfptoa_.o emalloc_.o findconfig_.o fptoa_.o fptoms_.o getopt_.o \
gpstolfp_.o hextoint_.o hextolfp_.o humandate_.o ieee754io_.o inttoa_.o \
lib_strbuf_.o machines_.o md5c_.o memmove_.o mexit_.o mfp_mul_.o \
mfptoa_.o mfptoms_.o mktime_.o modetoa_.o mstolfp_.o msutotsf_.o \
msyslog_.o netof_.o numtoa_.o numtohost_.o octtoint_.o prettydate_.o \
ranny_.o refnumtoa_.o statestr_.o strerror_.o syssignal_.o systime_.o \
tsftomsu_.o tstotv_.o tvtoa_.o tvtots_.o uglydate_.o uinttoa_.o \
utvtoa_.o ymd2yd_.o : $(ANSI2KNR)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $(SOURCES) $(HEADERS) $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  gawk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libntp

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
a_md5encrypt.o: a_md5encrypt.c ../include/ntp_machine.h ../config.h \
	../include/ntp_proto.h ../include/ntp_types.h \
	../include/ntp_fp.h ../include/ntp_string.h ../include/global.h \
	../include/md5.h ../include/ntp_stdlib.h ../include/l_stdlib.h
adjtime.o: adjtime.c ../config.h
atoint.o: atoint.c ../include/ntp_types.h ../include/ntp_machine.h \
	../config.h ../include/ntp_proto.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h
atolfp.o: atolfp.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_string.h
atouint.o: atouint.c ../include/ntp_types.h ../include/ntp_machine.h \
	../config.h ../include/ntp_proto.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h
authencrypt.o: authencrypt.c ../include/ntp_machine.h ../config.h \
	../include/ntp_proto.h ../include/ntp_types.h \
	../include/ntp_fp.h ../include/ntp_string.h ../include/global.h \
	../include/des.h ../include/ntp_stdlib.h ../include/l_stdlib.h
authkeys.o: authkeys.c ../include/ntp_types.h ../include/ntp_machine.h \
	../config.h ../include/ntp_proto.h ../include/ntp_fp.h \
	../include/ntp_string.h ../include/ntp_malloc.h \
	../include/ntp_stdlib.h ../include/l_stdlib.h
authparity.o: authparity.c ../include/ntp_stdlib.h \
	../include/ntp_types.h ../include/ntp_machine.h ../config.h \
	../include/ntp_proto.h ../include/ntp_string.h \
	../include/l_stdlib.h
authreadkeys.o: authreadkeys.c ../include/ntp_stdlib.h \
	../include/ntp_types.h ../include/ntp_machine.h ../config.h \
	../include/ntp_proto.h ../include/ntp_string.h \
	../include/l_stdlib.h ../include/ntp_syslog.h
authusekey.o: authusekey.c ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_string.h ../include/ntp_stdlib.h \
	../include/l_stdlib.h
binio.o: binio.c ../include/binio.h ../include/ntp_stdlib.h \
	../include/ntp_types.h ../include/ntp_machine.h ../config.h \
	../include/ntp_proto.h ../include/ntp_string.h \
	../include/l_stdlib.h
buftvtots.o: buftvtots.c ../config.h ../include/ntp_fp.h \
	../include/ntp_types.h ../include/ntp_machine.h \
	../include/ntp_proto.h ../include/ntp_unixtime.h
caljulian.o: caljulian.c ../include/ntp_types.h ../include/ntp_machine.h \
	../config.h ../include/ntp_proto.h ../include/ntp_calendar.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
calleapwhen.o: calleapwhen.c ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_calendar.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h
caltontp.o: caltontp.c ../include/ntp_types.h ../include/ntp_machine.h \
	../config.h ../include/ntp_proto.h ../include/ntp_calendar.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
calyearstart.o: calyearstart.c ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_calendar.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h
clocktime.o: clocktime.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_unixtime.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h
clocktypes.o: clocktypes.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp.h lib_strbuf.h ../include/ntp_refclock.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
decodenetnum.o: decodenetnum.c ../include/ntp_stdlib.h \
	../include/ntp_types.h ../include/ntp_machine.h ../config.h \
	../include/ntp_proto.h ../include/ntp_string.h \
	../include/l_stdlib.h
desc.o: desc.c ../include/global.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/rsaref.h ../include/md2.h ../include/md5.h \
	../include/des.h
dofptoa.o: dofptoa.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	lib_strbuf.h ../include/ntp_string.h ../include/ntp_stdlib.h \
	../include/l_stdlib.h
dolfptoa.o: dolfptoa.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	lib_strbuf.h ../include/ntp_string.h ../include/ntp_stdlib.h \
	../include/l_stdlib.h
emalloc.o: emalloc.c ../include/ntp_types.h ../include/ntp_machine.h \
	../config.h ../include/ntp_proto.h ../include/ntp_malloc.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h ../include/ntp_syslog.h
findconfig.o: findconfig.c ../config.h ../include/ntp_stdlib.h \
	../include/ntp_types.h ../include/ntp_machine.h \
	../include/ntp_proto.h ../include/ntp_string.h \
	../include/l_stdlib.h
fptoa.o: fptoa.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
fptoms.o: fptoms.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h
getopt.o: getopt.c ../include/ntp_stdlib.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_string.h ../include/l_stdlib.h
gpstolfp.o: gpstolfp.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h
hextoint.o: hextoint.c ../include/ntp_stdlib.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_string.h ../include/l_stdlib.h
hextolfp.o: hextolfp.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_string.h ../include/ntp_stdlib.h \
	../include/l_stdlib.h
humandate.o: humandate.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_unixtime.h lib_strbuf.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h
ieee754io.o: ieee754io.c ../config.h ../include/l_stdlib.h \
	../include/ntp_types.h ../include/ntp_machine.h \
	../include/ntp_proto.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/ntp_fp.h \
	../include/ieee754io.h lib_strbuf.h
inttoa.o: inttoa.c lib_strbuf.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
lib_strbuf.o: lib_strbuf.c lib_strbuf.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h
machines.o: machines.c ../config.h ../include/ntp_machine.h \
	../include/ntp_proto.h ../include/ntp_syslog.h \
	../include/ntp_stdlib.h ../include/ntp_types.h \
	../include/ntp_string.h ../include/l_stdlib.h
md5c.o: md5c.c ../include/global.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/md5.h
memmove.o: memmove.c ../config.h
mexit.o: mexit.c
mfp_mul.o: mfp_mul.c ../include/ntp_stdlib.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_string.h ../include/l_stdlib.h \
	../include/ntp_fp.h
mfptoa.o: mfptoa.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
mfptoms.o: mfptoms.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
modetoa.o: modetoa.c lib_strbuf.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
mstolfp.o: mstolfp.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
msutotsf.o: msutotsf.c ../include/ntp_types.h ../include/ntp_machine.h \
	../config.h ../include/ntp_proto.h
msyslog.o: msyslog.c ../config.h ../include/ntp_types.h \
	../include/ntp_machine.h ../include/ntp_proto.h \
	../include/ntp_string.h ../include/ntp_stdlib.h \
	../include/l_stdlib.h ../include/ntp_syslog.h
netof.o: netof.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
numtoa.o: numtoa.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	lib_strbuf.h ../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
numtohost.o: numtohost.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h lib_strbuf.h
octtoint.o: octtoint.c ../include/ntp_stdlib.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_string.h ../include/l_stdlib.h
prettydate.o: prettydate.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_unixtime.h lib_strbuf.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h
ranny.o: ranny.c ../include/ntp_stdlib.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_string.h ../include/l_stdlib.h
refnumtoa.o: refnumtoa.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	lib_strbuf.h ../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
statestr.o: statestr.c ../config.h ../include/ntp_stdlib.h \
	../include/ntp_types.h ../include/ntp_machine.h \
	../include/ntp_proto.h ../include/ntp_string.h \
	../include/l_stdlib.h ../include/ntp_fp.h ../include/ntp.h \
	lib_strbuf.h ../include/ntp_refclock.h ../include/ntp_control.h
syssignal.o: syssignal.c ../include/ntp_syslog.h ../include/ntp_stdlib.h \
	../include/ntp_types.h ../include/ntp_machine.h ../config.h \
	../include/ntp_proto.h ../include/ntp_string.h \
	../include/l_stdlib.h
systime.o: systime.c ../config.h ../include/ntp_machine.h \
	../include/ntp_proto.h ../include/ntp_fp.h \
	../include/ntp_types.h ../include/ntp_syslog.h \
	../include/ntp_unixtime.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h
tsftomsu.o: tsftomsu.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
tstotv.o: tstotv.c ../include/ntp_types.h ../include/ntp_machine.h \
	../config.h ../include/ntp_proto.h
tvtoa.o: tvtoa.c lib_strbuf.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h ../include/ntp_unixtime.h
tvtots.o: tvtots.c ../include/ntp_types.h ../include/ntp_machine.h \
	../config.h ../include/ntp_proto.h
uglydate.o: uglydate.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_unixtime.h lib_strbuf.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h
uinttoa.o: uinttoa.c lib_strbuf.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h
utvtoa.o: utvtoa.c lib_strbuf.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_stdlib.h ../include/ntp_string.h \
	../include/l_stdlib.h ../include/ntp_unixtime.h
ymd2yd.o: ymd2yd.c ../include/ntp_fp.h ../include/ntp_types.h \
	../include/ntp_machine.h ../config.h ../include/ntp_proto.h \
	../include/ntp_unixtime.h ../include/ntp_stdlib.h \
	../include/ntp_string.h ../include/l_stdlib.h

info:
dvi:
check: all
	$(MAKE)
installcheck:
install-exec: 
	@$(NORMAL_INSTALL)

install-data: 
	@$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: 

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install
installdirs:


mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(DISTCLEANFILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-noinstLIBRARIES mostlyclean-compile \
		mostlyclean-kr mostlyclean-tags mostlyclean-generic

clean:  clean-noinstLIBRARIES clean-compile clean-kr clean-tags \
		clean-generic mostlyclean

distclean:  distclean-noinstLIBRARIES distclean-compile distclean-kr \
		distclean-tags distclean-generic clean
	-rm -f config.status

maintainer-clean:  maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-kr \
		maintainer-clean-tags maintainer-clean-generic \
		distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-kr distclean-kr clean-kr \
maintainer-clean-kr tags mostlyclean-tags distclean-tags clean-tags \
maintainer-clean-tags distdir info dvi installcheck install-exec \
install-data install uninstall all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


../include/des.h:
	touch ../include/des.h
#EXTRA_DIST = libntp.mak README $(HEADERS) adjtimex.c desc.c.des desc.c.export log.c makemc.bat messages.mc strerror.c mktime.c

mktime_.c: mktime.c $(ANSI2KNR)
	$(ANSI2KNR) $< mktime_.c

strerror_.c: strerror.c $(ANSI2KNR)
	$(ANSI2KNR) $< strerror_.c

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
