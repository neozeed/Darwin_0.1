{
    CURRENTLY_ACTIVE_VERSION = YES; 
    DEPLOY_WITH_VERSION_NAME = B; 
    DOCICONFILES = (); 
    DYNAMIC_CODE_GEN = YES; 
    FILESTABLE = {
        CLASSES = (
            NSButtonSound.m, 
            NXPlayStream.m, 
            NXRecordStream.m, 
            NXSoundDevice.m, 
            NXSoundIn.m, 
            NXSoundOut.m, 
            NXSoundParameters.m, 
            NXSoundStream.m, 
            Sound.m, 
            SoundMeter.m, 
            SoundView.m
        ); 
        C_FILES = (); 
        English_OTHER_RESOURCES = (SoundKit.strings); 
        FRAMEWORKS = (AppKit.framework, Foundation.framework); 
        FRAMEWORKSEARCH = ("$(SYMROOT)"); 
        HEADERSEARCH = (
            "$(SYSTEM_LIBRARY_DIR)/Frameworks/AppKit.framework/Headers", 
            "$(SYSTEM_LIBRARY_DIR)/Frameworks/AppKit.framework/PrivateHeaders"
        ); 
        H_FILES = (
            audioReplyHandler.h, 
            NSButtonSound.h, 
            NXPlayStream.h, 
            NXRecordStream.h, 
            NXSoundDevice.h, 
            NXSoundIn.h, 
            NXSoundOut.h, 
            NXSoundParameters.h, 
            NXSoundStream.h, 
            NXSoundStream_Private.h, 
            NXSoundThreshold_Private.h, 
            NXSound_Private.h, 
            obsolete.h, 
            Sound.h, 
            SoundKit.h, 
            SoundMeter.h, 
            SoundView.h
        ); 
        M_FILES = (); 
        OTHER_LIBS = (); 
        OTHER_LINKED = (audioLookup.c, audioReplyHandler.c, obsolete.m, SoundKit_globals.m); 
        OTHER_RESOURCES = (); 
        OTHER_SOURCES = (
            Makefile.preamble, 
            Makefile, 
            Makefile.postamble, 
            m.template, 
            h.template, 
            SoundKit.rtf, 
            SoundKit.user_bom, 
            audioReply.defs, 
            audio.defs
        ); 
        PRECOMPILED_HEADERS = (); 
        PUBLIC_HEADERS = (
            SoundKit.h, 
            NXPlayStream.h, 
            NXSoundDevice.h, 
            NXSoundStream.h, 
            NXSoundIn.h, 
            NXSoundOut.h, 
            NXRecordStream.h, 
            NXSoundParameters.h, 
            Sound.h, 
            SoundMeter.h, 
            SoundView.h, 
            NSButtonSound.h
        ); 
        STRINGS_FILES = (); 
        SUBPROJECTS = (sound.subproj); 
    }; 
    GENERATEMAIN = YES; 
    LANGUAGE = English; 
    MAKEFILEDIR = "$(MAKEFILEPATH)/pb_makefiles"; 
    NEXTSTEP_BUILDTOOL = /bin/gnumake; 
    NEXTSTEP_COMPILEROPTIONS = "-DDRIVER_PRIVATE"; 
    NEXTSTEP_DOCUMENTEXTENSIONS = (); 
    NEXTSTEP_INSTALLDIR = "$(SYSTEM_LIBRARY_DIR)/PrivateFrameworks"; 
    NEXTSTEP_JAVA_COMPILER = /usr/bin/javac; 
    NEXTSTEP_OBJCPLUS_COMPILER = /usr/bin/cc; 
    PDO_UNIX_BUILDDIR = /Net/sound/BUILD/SoundKit.BUILD; 
    PDO_UNIX_BUILDTOOL = $NEXT_ROOT/Developer/bin/make; 
    PDO_UNIX_COMPILEROPTIONS = "-DDRIVER_PRIVATE"; 
    PDO_UNIX_INSTALLDIR = "$(SYSTEM_LIBRARY_DIR)/Frameworks"; 
    PDO_UNIX_JAVA_COMPILER = "$(NEXTDEV_BIN)/javac"; 
    PDO_UNIX_LINKEROPTIONS = ""; 
    PDO_UNIX_OBJCPLUS_COMPILER = "$(NEXTDEV_BIN)/gcc"; 
    PROJECTNAME = SoundKit; 
    PROJECTTYPE = Framework; 
    PROJECTVERSION = 2.8; 
    WINDOWS_BUILDDIR = /Net/sound/BUILD/SoundKit.BUILD; 
    WINDOWS_BUILDTOOL = $NEXT_ROOT/Developer/Executables/make; 
    WINDOWS_COMPILEROPTIONS = "-DDRIVER_PRIVATE"; 
    WINDOWS_INSTALLDIR = "$(SYSTEM_LIBRARY_DIR)/Frameworks"; 
    WINDOWS_JAVA_COMPILER = "$(JDKBINDIR)/javac.exe"; 
    WINDOWS_LINKEROPTIONS = ""; 
    WINDOWS_OBJCPLUS_COMPILER = "$(DEVDIR)/gcc"; 
}
