###############################################################################
#  NeXT Makefile.preamble Template
#  Copyright 1993, NeXT Computer, Inc.
#
#  This Makefile is used for configuring the standard app makefiles associated
#  with ProjectBuilder.  
#  
#  Use this template to set attributes for a project, sub-project, bundle, or
#  palette.  Each node in the project's tree of sub-projects and bundles 
#  should have it's own Makefile.preamble and Makefile.postamble.
#
###############################################################################
## Configure the flags passed to $(CC) here.  These flags will also be 
## inherited by all nested sub-projects and bundles.  Put your -I, -D, -U, and
## -L flags here.  To change the default flags that get passed to ${CC} 
## (e.g. change -O to -O2), see Makefile.postamble.

# Flags passed to compiler (in addition to -g, -O, etc)
OTHER_CFLAGS = 
# Flags passed to ld (in addition to -ObjC, etc.)
OTHER_LDFLAGS =	
# Flags passed to libtool when building libraries
OTHER_LIBTOOL_FLAGS = -seg1addr 47600000

# Stuff related to exporting headers from this project that isn't already 
# handled by PB.
PUBLIC_HEADER_DIR = 
PUBLIC_PRECOMPILED_HEADERS =
PUBLIC_PRECOMPILED_HEADERS_CFLAGS =

PROJECT_PRECOMPILED_HEADERS =
#EXPORT_PROJECT_HEADERS = YES

# Set this to YES if you don't want a final libtool call for a library/framework.
BUILD_OFILES_LIST_ONLY = 

# Additional relocatables to be linked into this project
OTHER_OFILES = 
# Additional libs to link against
OTHER_LIBS = 
# Additional libs to link against when $(JAPANESE) = "YES"
OTHER_JAPANESE_LIBS = 
# To include a version string, project source must exist in a directory named 
# $(NAME).%d[.%d][.%d] and the following line must be uncommented.
# OTHER_GENERATED_OFILES = $(VERS_OFILE)

## Configure how things get built here.  Additional dependencies, source files, 
## derived files, and build order should be specified here.

# Other dependencies of this project
OTHER_PRODUCT_DEPENDS =	
# Built *before* building subprojects/bundles
OTHER_INITIAL_TARGETS = audio.h audioReply.h
# Other source files maintained by .pre/postamble
OTHER_SOURCEFILES = 
# Additional files to be removed by `make clean' 
OTHER_GARBAGE = cb
# Precompiled headers to be built before any compilation occurs (e.g., draw.p)
PRECOMPS = 

# Targets to build before installation
OTHER_INSTALL_DEPENDS =	profile

# A virtual root directory (other than /) to be prepended to the $(INSTALLDIR) 
# passed from ProjectBuilder.
DSTROOT = 

# More obscure flags you might want to set for pswrap, yacc, lex, etc.
PSWFLAGS = 
YFLAGS = 
LFLAGS = 

## Delete this line if you want fast and loose cleans that will not remove 
## things like precomps and user-defined OTHER_GARBAGE in subprojects.
CLEAN_ALL_SUBPROJECTS = YES

## Add more obscure source files here to cause them to be automatically 
## processed by the appropriate tool.  Note that these files should also be
## added to "Supporting Files" in ProjectBuilder.  The desired .o files that 
## result from these files should also be added to OTHER_OFILES above so they
## will be linked in.

# .msg files that should have msgwrap run on them
MSGFILES = 
# .defs files that should have mig run on them
DEFSFILES = 
# .mig files (no .defs files) that should have mig run on them
MIGFILES = 

## Add additional Help directories here (add them to the project as "Other 
## Resources" in Project Builder) so that they will be compressed into .store
## files and copied into the app wrapper.  If the help directories themselves
## need to also be in the app wrapper, then a cp command will need to be added
## in an after_install target.
OTHER_HELP_DIRS = 

# Don't add more rules here unless you want the first one to be the default
# target for make!  Put all your targets in Makefile.postamble.

# Here are definitions for the variables described above.
# See the special rules in Makefile.postamble for audio.defs & audioReply.defs.
DEFSFILES = 
OTHER_OFILES = audioUser.o $(VERS_OFILE)

# PUBLIC_PRECOMPILED_HEADERS = SoundKit.h
# PUBLIC_PRECOMPILED_HEADERS_CFLAGS = $(ALL_CFLAGS)
